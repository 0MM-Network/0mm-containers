FROM ubuntu:noble AS default

ARG BIN_NAME
ARG PRODUCT_VERSION
ARG PRODUCT_REVISION
ARG TARGETOS
ARG TARGETARCH

ENV NAME=$BIN_NAME
ENV VERSION=$PRODUCT_VERSION

# Create non-root user with UID 1000
RUN useradd -u 1001 -m -s /bin/bash vault

RUN set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends curl dumb-init wget tzdata libcap2-bin ca-certificates jq; \
    if [ -z "$PRODUCT_VERSION" ]; then \
      PRODUCT_VERSION=$(curl -s https://api.github.com/repos/openbao/openbao/releases/latest | jq -r '.tag_name' | sed 's/^v//'); \
    fi; \
    wget https://github.com/openbao/openbao/releases/download/v${PRODUCT_VERSION}/bao_${PRODUCT_VERSION}_linux_${TARGETARCH}.deb; \
    dpkg -i bao_${PRODUCT_VERSION}_linux_${TARGETARCH}.deb; \
    cp -f /usr/bin/bao /usr/bin/${BIN_NAME}; \
    chmod +x /usr/bin/${BIN_NAME}; \
    rm bao_${PRODUCT_VERSION}_linux_${TARGETARCH}.deb; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install latest su-exec
RUN  set -ex; \
     \
     curl -o /usr/local/bin/su-exec.c https://raw.githubusercontent.com/ncopa/su-exec/master/su-exec.c; \
     \
     fetch_deps='gcc libc-dev'; \
     apt-get update; \
     apt-get install -y --no-install-recommends $fetch_deps; \
     gcc -Wall \
         /usr/local/bin/su-exec.c -o/usr/local/bin/su-exec; \
     chown root:root /usr/local/bin/su-exec; \
     chmod 0755 /usr/local/bin/su-exec; \
     rm /usr/local/bin/su-exec.c; \
     \
     apt-get purge -y --auto-remove $fetch_deps
    
# Create user and configure sudo
# RUN echo "${NAME} ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/${NAME} && \
#     chmod 0440 /etc/sudoers.d/${NAME}

RUN mkdir -p /vault/logs && \
    mkdir -p /vault/file && \
    mkdir -p /vault/config && \
    chown -R ${NAME}:${NAME} /vault

COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN vault -autocomplete-install && \
    chmod +x /usr/local/bin/entrypoint.sh && \
    sed -i "s/openbao/${BIN_NAME}/g" /usr/local/bin/entrypoint.sh

USER vault

VOLUME /vault/logs
VOLUME /vault/file

EXPOSE 8200

# Verify Vault commands are available
RUN vault version && \
    vault status -h && \
    vault kv -h && \
    vault path-help -h && \
    vault server -h

ENTRYPOINT ["entrypoint.sh"]

CMD ["vault", "server"]
